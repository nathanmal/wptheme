<?php if ( ! defined( 'ABSPATH' ) ) exit;



final class Theme
{
	static $initialized = FALSE;



	public static function instance()
	{
		if( empty(self::$instance) ){
			self::$instance = new Theme
		}
	}


	/**
	 * Initialization
	 * @return [type] [description]
	 */
	public static function init()
	{
		// Only allow init once
		if( self::$initialized ) return;
		

		// Add filters
		add_filter( 'the_generator', 'Theme::remove_generator' );
		// Hide descriptive login errors
		add_filter( 'login_errors', 'Theme::secure_failed_login' );
		// remove WP version from css
		add_filter( 'style_loader_src', 'Theme::remove_asset_version', 9999 );
		// remove Wp version from scripts
		add_filter( 'script_loader_src', 'Theme::remove_asset_version', 9999 );
		// Add slug className to body
		add_filter( 'body_class', 'Theme::add_body_class' );

		// Add dependency classes
		self::add_dependencies();
		// Declare support 
		self::declare_support();
		// Clean up wp_head();
		self::cleanup_head();
		// Enqueue scripts & styles
  		add_action( 'wp_enqueue_scripts', 'Theme::wp_enqueue', 110 );



		self::$initialized = TRUE;
	}


	/**
	 * Called on theme activation
	 * @return [type] [description]
	 */
	public static function activate()
	{

	}

	/**
	 * Called on theme deactivation
	 * @return [type] [description]
	 */
	public static function deactivate()
	{
		
	}

	/**
	 * Get theme URI path
	 * @param  string $path path to add to the URI
	 * @return [type]       [description]
	 */
	public static function uri( $path = '' )
	{
		return empty($path) ? THEME_URI : THEME_URI . '/' . ltrim($path, '/');
	}

	/**
	 * Get theme directory path
	 * @param  string $path [description]
	 * @return [type]       [description]
	 */
	public static function dir( $path = '' )
	{
		return empty($path) ? THEME_DIR : THEME_DIR . '/' . ltrim($path, '/');
	}


	/**
	 * Add dependency classes
	 */
	public static function add_dependencies()
	{
		// For creating bootstrap style navs
		require( 'vendor/wp-bootstrap-navwalker/wp-bootstrap-navwalker.php' );

	}

		/**
	 * Clean up head tags generated by WP by default
	 * @category optimization
	 * @return [type] [description]
	 */
	public static function cleanup_head()
	{
		// Edit URI link
		remove_action( 'wp_head', 'rsd_link' );
		// windows live writer
		remove_action( 'wp_head', 'wlwmanifest_link' );
		// previous link
		remove_action( 'wp_head', 'parent_post_rel_link', 10, 0 );
		// start link
		remove_action( 'wp_head', 'start_post_rel_link', 10, 0 );
		// links for adjacent posts
		remove_action( 'wp_head', 'adjacent_posts_rel_link_wp_head', 10, 0 );
		// WP version
		remove_action( 'wp_head', 'wp_generator' );
		// Remove index link
		remove_action( 'wp_head', 'index_rel_link' );
		// Remove feed links
		remove_action( 'wp_head', 'feed_links', 2 );
		// Remove extra feed links
		remove_action( 'wp_head', 'feed_links_extra', 3 );
		// Remove shortlink
		remove_action( 'wp_head', 'wp_shortlink_wp_head', 10, 0 );


	}


	/**
	 * Declare supports for this theme
	 * @return [type] [description]
	 */
	public static function declare_support()
	{
		// load_theme_textdomain( 'startr',  get_template_directory() . '/library/lang' );
		
		// wp thumbnails (sizes handled in functions.php)
		add_theme_support( 'post-thumbnails' );

		// default thumb size
		set_post_thumbnail_size(125, 125, TRUE);

		// wp menus
		add_theme_support( 'menus' );

		// registering wp3+ menus
		register_nav_menus(
			array(
				'main-menu'   => __( 'Main Menu', WP_THEME_DOMAIN ),    // main nav in header
				'mobile-menu' => __( 'Mobile Menu', WP_THEME_DOMAIN ),  // mobile nav in header
				'footer-menu' => __( 'Footer Menu', WP_THEME_DOMAIN ) 	// secondary nav in footer
			)
		);

		// Enable support for HTML5 markup.
		
		$html5 = array(
			'comment-list',
			'search-form',
			'comment-form'
		);

		add_theme_support( 'html5', $html5 );

		// adding post format support
		add_theme_support( 'post-formats',
			array(
				'aside',             // title less blurb
				'gallery',           // gallery of images
				'link',              // quick link to other site
				'image',             // an image
				'quote',             // a quick quote
				'status',            // a Facebook like status update
				'video',             // video
				'audio',             // audio
				'chat'               // chat transcript
			)
		);

		// Add RSS Support
		add_theme_support('automatic-feed-links');

	}


	/**
	 * Strips version attribute from asset URLs
	 * @category optimization
	 * @param  string $src URL to check
	 * @return [type]      [description]
	 */
	public static function remove_asset_version( $src )
	{
		return strpos( $src, 'ver=' ) ? remove_query_arg( 'ver', $src ) : $src;
	}


	/**
	 * Remove WP generator tag from head
	 * @category security
	 * @return [type] [description]
	 */
	public static function remove_generator()
	{
		return '';
	} 

	/**
	 * Show less information on failed login attempt
	 * @category security
	 * @return [type] [description]
	 */
	public static function secure_failed_login() 
	{
		return '<strong>ERROR</strong>: Invalid Login!';
	}


	/**
	 * Add page slug to body class
	 * @param [type] $classes [description]
	 */
	public static function add_body_class( $classes ) 
	{
		global $post;

		if ( isset( $post ) ) 
		{
			$classes[] = $post->post_type . '-' . $post->post_name;
		}

		return $classes;
	}	

	/**
	 * Enqueue theme scripts and styles
	 * @return [type] [description]
	 */
	public static function wp_enqueue()
	{

		if( ! is_admin() ) 
		{
			// Replace built-in jQuery with v3
			wp_deregister_script('jquery');
			wp_deregister_script('jquery-ui-core');
			wp_enqueue_script('jquery', WP_THEME_VENDOR . 'jquery/dist/jquery.min.js', array(),'3.2.1',TRUE);

			// Load Bootstrap
			wp_enqueue_script('bootstrap', WP_THEME_VENDOR . 'bootstrap/dist/bootstrap.min.js', array('jquery'),'3.3.7', TRUE);
			wp_enqueue_style('bootstrap', WP_THEME_VENDOR . 'bootstrap/dist/css/bootstrap.min.css', array(),'3.3.7','all');
			wp_enqueue_style('bootstrap-theme', WP_THEME_VENDOR . 'bootstrap/dist/css/bootstrap-theme.min.css', array(),'3.3.7','all');


			// Load fonts
			wp_enqueue_style('font-leaguegothic', WP_THEME_ASSETS . 'fonts/leaguegothic/stylesheet.css');

			// Load Theme Scripts & Styles
			wp_enqueue_style( 'theme', WP_THEME_ASSETS . 'css/theme.css', array(), '', 'all' );
			wp_enqueue_script( 'theme', WP_THEME_ASSETS . 'js/theme.js', array(), '', TRUE );


		}

	}


	/**
	 * Display enqueue files
	 * @category utility
	 * @return [type] [description]
	 */
	public static function display_enqueue() 
	{
	    global $wp_scripts, $wp_styles;
	   	
	   	echo '<h3>Scripts</h3>';
	    foreach( $wp_scripts->queue as $script )
	    {	
	    	echo $script . '<br/>';
	    }

	    echo '<h3>Styles</h3>';

	    foreach( $wp_styles->queue as $style )
	    {
	    	echo $style . '<br/>';
	    }

	}

	/**
	 * Include a view from the views directory
	 * @param  string  $path   path to the view 
	 * @param  array   $data   associative array of data to supply to view
	 * @param  integer $repeat multiplier, how many times to include the view, to create loops
	 * @return [type]          [description]
	 */
	public static function view( $path, $data = array(), $repeat = 1 )
	{
		if( ! empty($data) )
		{
			if( is_array($data) )
			{
				// If non-empty array, extract variables for the view
				extract($data, EXTR_SKIP);
			} 
			else if( is_int($data) && $data > 0 ) 
			{
				// If it's an int, we're shorthanding the repeat variable
				$repeat = $data;
			}
			
		}

		$path = self::dir( 'views/' + $path ) . '.php';

		if( ! is_file($path) ) return FALSE;

		if( $repeat >= 1  ) {
			for( $i = 1; $i <= $repeat; $i++ ){
				$loop_total = $repeat;
				$loop_count = $i;
				include($path);
			}
		} 
	}




}