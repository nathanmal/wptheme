<?php if ( ! defined( 'ABSPATH' ) ) exit;



final class Theme
{
	/**
	 * Theme singleton
	 * @var null
	 */
	private static $instance = NULL;

	/**
	 * Theme init
	 * @var boolean
	 */
	private static $initialized = FALSE;

	/**
	 * Theme config array
	 * @var null
	 */
	private static $config = NULL;


	public static function instance()
	{
		if( empty(self::$instance) ){
			self::$instance = new Theme();
		}
	}


	/**
	 * Initialization
	 * @return [type] [description]
	 */
	public static function init()
	{
		// Only allow init once
		if( self::$initialized ) return;

		// Load config file
		self::$config = include 'theme.config.php';

		// Include bootstrap navwalker for front side templates
		if( ! is_admin() ){
			require_once 'classes/wp-bootstrap-navwalker.php';
		}

		include('helpers.php');

		// Add filters
		add_filter( 'the_generator', 'Theme::remove_generator' );
		// Hide descriptive login errors
		add_filter( 'login_errors', 'Theme::secure_failed_login' );
		// remove WP version from css
		add_filter( 'style_loader_src', 'Theme::remove_asset_version', 9999 );
		// remove Wp version from scripts
		add_filter( 'script_loader_src', 'Theme::remove_asset_version', 9999 );
		// Add slug className to body
		add_filter( 'body_class', 'Theme::add_body_class' );

		// Declare support 
		self::declare_support();
		// Clean up wp_head();
		self::cleanup_head();
		// Enqueue scripts & styles
  		add_action( 'wp_enqueue_scripts', 'Theme::wp_enqueue', 110 );


  		// Mark initialized
		self::$initialized = TRUE;
	}


	public static function config($item=NULL)
	{
		if( empty($item) ) return self::$config;

		return isset(self::$config[$item]) ? self::$config[$item] : NULL;

	}


	/**
	 * Called on theme activation
	 * @return [type] [description]
	 */
	public static function activate()
	{

	}

	/**
	 * Called on theme deactivation
	 * @return [type] [description]
	 */
	public static function deactivate()
	{
		
	}

	/**
	 * Get theme URI path
	 * @param  string $path path to add to the URI
	 * @return [type]       [description]
	 */
	public static function uri( $path = '' )
	{
		return empty($path) ? THEME_URI : THEME_URI . '/' . ltrim($path, '/');
	}

	/**
	 * Get theme directory path
	 * @param  string $path [description]
	 * @return [type]       [description]
	 */
	public static function dir( $path = '' )
	{
		return empty($path) ? THEME_DIR : THEME_DIR . '/' . ltrim($path, '/');
	}



		/**
	 * Clean up head tags generated by WP by default
	 * @category optimization
	 * @return [type] [description]
	 */
	public static function cleanup_head()
	{
		// Edit URI link
		remove_action( 'wp_head', 'rsd_link' );
		// windows live writer
		remove_action( 'wp_head', 'wlwmanifest_link' );
		// previous link
		remove_action( 'wp_head', 'parent_post_rel_link', 10, 0 );
		// start link
		remove_action( 'wp_head', 'start_post_rel_link', 10, 0 );
		// links for adjacent posts
		remove_action( 'wp_head', 'adjacent_posts_rel_link_wp_head', 10, 0 );
		// WP version
		remove_action( 'wp_head', 'wp_generator' );
		// Remove index link
		remove_action( 'wp_head', 'index_rel_link' );
		// Remove feed links
		remove_action( 'wp_head', 'feed_links', 2 );
		// Remove extra feed links
		remove_action( 'wp_head', 'feed_links_extra', 3 );
		// Remove shortlink
		remove_action( 'wp_head', 'wp_shortlink_wp_head', 10, 0 );


	}


	/**
	 * Declare supports for this theme
	 * @return [type] [description]
	 */
	public static function declare_support()
	{
		// load_theme_textdomain( 'startr',  get_template_directory() . '/library/lang' );
		
		// wp thumbnails (sizes handled in functions.php)
		add_theme_support( 'post-thumbnails' );

		// default thumb size
		set_post_thumbnail_size(125, 125, TRUE);

		// wp menus
		add_theme_support( 'menus' );

		// registering wp3+ menus
		register_nav_menus(
			array(
				'main-menu'   => __( 'Main Menu', THEME_DOMAIN ),    // main nav in header
				'mobile-menu' => __( 'Mobile Menu', THEME_DOMAIN ),  // mobile nav in header
				'footer-menu' => __( 'Footer Menu', THEME_DOMAIN ) 	// secondary nav in footer
			)
		);

		// Enable support for HTML5 markup.
		
		$html5 = array(
			'comment-list',
			'search-form',
			'comment-form'
		);

		add_theme_support( 'html5', $html5 );

		// adding post format support
		add_theme_support( 'post-formats',
			array(
				'aside',             // title less blurb
				'gallery',           // gallery of images
				'link',              // quick link to other site
				'image',             // an image
				'quote',             // a quick quote
				'status',            // a Facebook like status update
				'video',             // video
				'audio',             // audio
				'chat'               // chat transcript
			)
		);

		// Add RSS Support
		add_theme_support('automatic-feed-links');

	}


	/**
	 * Strips version attribute from asset URLs
	 * @category optimization
	 * @param  string $src URL to check
	 * @return [type]      [description]
	 */
	public static function remove_asset_version( $src )
	{
		return strpos( $src, 'ver=' ) ? remove_query_arg( 'ver', $src ) : $src;
	}


	/**
	 * Remove WP generator tag from head
	 * @category security
	 * @return [type] [description]
	 */
	public static function remove_generator()
	{
		return '';
	} 

	/**
	 * Show less information on failed login attempt
	 * @category security
	 * @return [type] [description]
	 */
	public static function secure_failed_login() 
	{
		return '<strong>ERROR</strong>: Invalid Login!';
	}


	/**
	 * Add page slug to body class
	 * @param [type] $classes [description]
	 */
	public static function add_body_class( $classes ) 
	{
		global $post;

		if ( isset( $post ) ) 
		{
			$classes[] = $post->post_type . '-' . $post->post_name;
		}

		return $classes;
	}	


	public static function menu($name='')
	{

		$config = array(
			'menu'            => __( 'Main Menu', 'wptheme' ),  		// nav name
			'theme_location'  => 'main-nav',                 			// where it's located in the theme
			'container'       => '',                           			// remove nav container
			'container_class' => '',  									// class of container
			'menu_class'      => 'navbar-nav mr-auto',               	// adding custom nav class
			'before'          => '',                                 	// before the menu
			'after'           => '',                                  	// after the menu
			'link_before'     => '',                            		// before each link
			'link_after'      => '',                             		// after each link
			'depth'           => 0,                                   	// limit the depth of the nav
			'fallback_cb'     => 'wp_bootstrap_navwalker::fallback',	// fallback function
    		'walker'          => new wp_bootstrap_navwalker()                             		
		);

		wp_nav_menu($config);

	}

	/**
	 * Enqueue theme scripts and styles
	 * @return [type] [description]
	 */
	public static function wp_enqueue()
	{

		if( ! is_admin() ) 
		{
			// Replace built-in jQuery with v3
			wp_deregister_script('jquery');
			wp_deregister_script('jquery-ui-core');


			$scripts = Theme::config('scripts');

			foreach($scripts as $name => $script)
			{	
				$source = $script['source'];
				$dep    = isset($script['dependencies']) ? $script['dependencies'] : array();
				$ver    = isset($script['version']) ? $script['version'] : FALSE;
				$footer = isset($script['footer']) ? (bool) $script['footer'] : FALSE;

				wp_enqueue_script($name, $source, $dep, $ver, $footer);
			}

			$styles = Theme::config('styles');

			foreach($styles as $name => $style)
			{
				$source = $style['source'];
				$dep    = isset($style['dependencies']) ? $style['dependencies'] : array();
				$ver    = isset($style['version']) ? $style['version'] : FALSE;
				$med    = isset($style['media']) ? $style['media'] : 'all';

				wp_enqueue_style($name, $source, $dep, $ver, $med );
			}


			// Load Bootstrap
			wp_enqueue_script('bootstrap', WP_THEME_VENDOR . 'bootstrap/dist/bootstrap.min.js', array('jquery'),'3.3.7', TRUE);
			wp_enqueue_style('bootstrap', WP_THEME_VENDOR . 'bootstrap/dist/css/bootstrap.min.css', array(),'3.3.7','all');
			wp_enqueue_style('bootstrap-theme', WP_THEME_VENDOR . 'bootstrap/dist/css/bootstrap-theme.min.css', array(),'3.3.7','all');


			// Load fonts
			wp_enqueue_style('font-leaguegothic', WP_THEME_ASSETS . 'fonts/leaguegothic/stylesheet.css');

			// Load Theme Scripts & Styles
			wp_enqueue_style( 'theme', WP_THEME_ASSETS . 'css/theme.css', array(), '', 'all' );
			wp_enqueue_script( 'theme', WP_THEME_ASSETS . 'js/theme.js', array(), '', TRUE );


		}

	}


	/**
	 * Display enqueue files
	 * @category utility
	 * @return [type] [description]
	 */
	public static function display_enqueue() 
	{
	    global $wp_scripts, $wp_styles;
	   	
	   	echo '<h3>Scripts</h3>';
	    foreach( $wp_scripts->queue as $script )
	    {	
	    	echo $script . '<br/>';
	    }

	    echo '<h3>Styles</h3>';

	    foreach( $wp_styles->queue as $style )
	    {
	    	echo $style . '<br/>';
	    }

	}


	public static function header()
	{
		Theme::view('header');
	}


	public static function footer()
	{
		Theme::view('footer');
	}


	public static function getTemplate()
	{
		$id 	= get_the_ID();
		$slug 	= get_page_template_slug($id);
		$type   = get_post_type($id);
		$arch   = 'archive-' . $type;
		$sing   = 'single-' . $type;

		$template = 'index';

		if( empty($id) OR is_404() ) {
			$template = '404';
		} else if( is_front_page() && wptheme_template_exists('front') ) {
			$template = 'front';
		} else if( is_home() && wptheme_template_exists('home') ) {
			$template = 'home';
		} else if( is_page() && wptheme_template_exists('page-'.$slug) ) {
			$template = 'page-'.$slug;
		} else if( is_page() && wptheme_template_exists('page') ) {
			$template = 'page';
		} else if( is_post_type_archive($type) && wptheme_template_exists($arch) ) {
			$template = $arch; 
		} else if( is_archive() && wptheme_template_exists('archive') ) {
			$template = 'archive';
		} else if( is_single() && wptheme_template_exists($sing) ) {
			$template = $sing;
		} else if( is_single() && wptheme_template_exists('single') ) {
			$template = 'single';
		} else if( is_search() && wptheme_template_exists('search') ) {
			$template = 'search';
		}

		get_header();
		wptheme_load_template($template);
		get_footer();

	}

	/**
	 * Include a view from the views directory
	 * @param  string  $path   path to the view 
	 * @param  array   $data   associative array of data to supply to view
	 * @param  integer $repeat multiplier, how many times to include the view, to create loops
	 * @return [type]          [description]
	 */
	public static function view( $path, $data = array(), $repeat = 1 )
	{

		if( substr($path, -4) != '.php' ) $path .= '.php';

		if( ! empty($data) && is_array($data) )
		{
			// If non-empty array, extract variables for the view
			extract($data, EXTR_SKIP);
		}

		$path = self::dir( 'library/views/' . $path );

		if( ! is_file($path) ) wp_die('Could not locate view:<br/><strong>' . $path . '</strong>');

		if( $repeat >= 1  ) {
			for( $i = 1; $i <= $repeat; $i++ ){
				$loop_total = $repeat;
				$loop_count = $i;
				include($path);
			}
		}
	}

}